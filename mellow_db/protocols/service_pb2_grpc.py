# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from mellow_db.protocols import service_pb2 as mellow__db_dot_protocols_dot_service__pb2

GRPC_GENERATED_VERSION = '1.68.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in mellow_db/protocols/service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class MellowServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.connect = channel.unary_unary(
                '/MellowService/connect',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.ConnectRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.ConnectResponse.FromString,
                _registered_method=True)
        self.disconnect = channel.unary_unary(
                '/MellowService/disconnect',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.DisconnectRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.DisconnectResponse.FromString,
                _registered_method=True)
        self.use_collection = channel.unary_unary(
                '/MellowService/use_collection',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.UseCollectionRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.UseCollectionResponse.FromString,
                _registered_method=True)
        self.create_collection = channel.unary_unary(
                '/MellowService/create_collection',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.CreateCollectionRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.CreateCollectionResponse.FromString,
                _registered_method=True)
        self.delete_collection = channel.unary_unary(
                '/MellowService/delete_collection',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.DeleteCollectionRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.DeleteCollectionResponse.FromString,
                _registered_method=True)
        self.get_collection_item_count = channel.unary_unary(
                '/MellowService/get_collection_item_count',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.GetCollectionItemCountRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.GetCollectionItemCountResponse.FromString,
                _registered_method=True)
        self.get_collection_info = channel.unary_unary(
                '/MellowService/get_collection_info',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.GetCollectionInfoRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.GetCollectionInfoResponse.FromString,
                _registered_method=True)
        self.add = channel.unary_unary(
                '/MellowService/add',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.AddRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.AddResponse.FromString,
                _registered_method=True)
        self.get = channel.unary_unary(
                '/MellowService/get',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.GetRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.GetResponse.FromString,
                _registered_method=True)
        self.search = channel.unary_unary(
                '/MellowService/search',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.SearchRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.SearchResponse.FromString,
                _registered_method=True)
        self.eval = channel.unary_unary(
                '/MellowService/eval',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.EvalRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.EvalResponse.FromString,
                _registered_method=True)
        self.back_up = channel.unary_unary(
                '/MellowService/back_up',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.BackUpRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.BackUpResponse.FromString,
                _registered_method=True)
        self.back_up_to_gcs = channel.unary_unary(
                '/MellowService/back_up_to_gcs',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.BackUpToGcsRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.BackUpToGcsResponse.FromString,
                _registered_method=True)
        self.load_from_path = channel.unary_unary(
                '/MellowService/load_from_path',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.LoadFromPathRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.LoadFromPathResponse.FromString,
                _registered_method=True)
        self.load_from_gcs = channel.unary_unary(
                '/MellowService/load_from_gcs',
                request_serializer=mellow__db_dot_protocols_dot_service__pb2.LoadFromGcsRequest.SerializeToString,
                response_deserializer=mellow__db_dot_protocols_dot_service__pb2.LoadFromGcsResponse.FromString,
                _registered_method=True)


class MellowServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def connect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def disconnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def use_collection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create_collection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_collection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_collection_item_count(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_collection_info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def search(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def eval(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def back_up(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def back_up_to_gcs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def load_from_path(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def load_from_gcs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MellowServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'connect': grpc.unary_unary_rpc_method_handler(
                    servicer.connect,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.ConnectRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.ConnectResponse.SerializeToString,
            ),
            'disconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.disconnect,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.DisconnectRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.DisconnectResponse.SerializeToString,
            ),
            'use_collection': grpc.unary_unary_rpc_method_handler(
                    servicer.use_collection,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.UseCollectionRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.UseCollectionResponse.SerializeToString,
            ),
            'create_collection': grpc.unary_unary_rpc_method_handler(
                    servicer.create_collection,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.CreateCollectionRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.CreateCollectionResponse.SerializeToString,
            ),
            'delete_collection': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_collection,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.DeleteCollectionRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.DeleteCollectionResponse.SerializeToString,
            ),
            'get_collection_item_count': grpc.unary_unary_rpc_method_handler(
                    servicer.get_collection_item_count,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.GetCollectionItemCountRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.GetCollectionItemCountResponse.SerializeToString,
            ),
            'get_collection_info': grpc.unary_unary_rpc_method_handler(
                    servicer.get_collection_info,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.GetCollectionInfoRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.GetCollectionInfoResponse.SerializeToString,
            ),
            'add': grpc.unary_unary_rpc_method_handler(
                    servicer.add,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.AddRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.AddResponse.SerializeToString,
            ),
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.GetRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.GetResponse.SerializeToString,
            ),
            'search': grpc.unary_unary_rpc_method_handler(
                    servicer.search,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.SearchRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.SearchResponse.SerializeToString,
            ),
            'eval': grpc.unary_unary_rpc_method_handler(
                    servicer.eval,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.EvalRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.EvalResponse.SerializeToString,
            ),
            'back_up': grpc.unary_unary_rpc_method_handler(
                    servicer.back_up,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.BackUpRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.BackUpResponse.SerializeToString,
            ),
            'back_up_to_gcs': grpc.unary_unary_rpc_method_handler(
                    servicer.back_up_to_gcs,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.BackUpToGcsRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.BackUpToGcsResponse.SerializeToString,
            ),
            'load_from_path': grpc.unary_unary_rpc_method_handler(
                    servicer.load_from_path,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.LoadFromPathRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.LoadFromPathResponse.SerializeToString,
            ),
            'load_from_gcs': grpc.unary_unary_rpc_method_handler(
                    servicer.load_from_gcs,
                    request_deserializer=mellow__db_dot_protocols_dot_service__pb2.LoadFromGcsRequest.FromString,
                    response_serializer=mellow__db_dot_protocols_dot_service__pb2.LoadFromGcsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'MellowService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('MellowService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MellowService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def connect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/connect',
            mellow__db_dot_protocols_dot_service__pb2.ConnectRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.ConnectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def disconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/disconnect',
            mellow__db_dot_protocols_dot_service__pb2.DisconnectRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.DisconnectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def use_collection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/use_collection',
            mellow__db_dot_protocols_dot_service__pb2.UseCollectionRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.UseCollectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def create_collection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/create_collection',
            mellow__db_dot_protocols_dot_service__pb2.CreateCollectionRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.CreateCollectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def delete_collection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/delete_collection',
            mellow__db_dot_protocols_dot_service__pb2.DeleteCollectionRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.DeleteCollectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_collection_item_count(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/get_collection_item_count',
            mellow__db_dot_protocols_dot_service__pb2.GetCollectionItemCountRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.GetCollectionItemCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_collection_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/get_collection_info',
            mellow__db_dot_protocols_dot_service__pb2.GetCollectionInfoRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.GetCollectionInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def add(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/add',
            mellow__db_dot_protocols_dot_service__pb2.AddRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.AddResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/get',
            mellow__db_dot_protocols_dot_service__pb2.GetRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.GetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/search',
            mellow__db_dot_protocols_dot_service__pb2.SearchRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.SearchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def eval(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/eval',
            mellow__db_dot_protocols_dot_service__pb2.EvalRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.EvalResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def back_up(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/back_up',
            mellow__db_dot_protocols_dot_service__pb2.BackUpRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.BackUpResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def back_up_to_gcs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/back_up_to_gcs',
            mellow__db_dot_protocols_dot_service__pb2.BackUpToGcsRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.BackUpToGcsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def load_from_path(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/load_from_path',
            mellow__db_dot_protocols_dot_service__pb2.LoadFromPathRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.LoadFromPathResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def load_from_gcs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/MellowService/load_from_gcs',
            mellow__db_dot_protocols_dot_service__pb2.LoadFromGcsRequest.SerializeToString,
            mellow__db_dot_protocols_dot_service__pb2.LoadFromGcsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
